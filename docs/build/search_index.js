var documenterSearchIndex = {"docs":
[{"location":"literate/examples/#","page":"-","title":"-","text":"using AbstractPlotting, CairoMakie, MakieRecipes; nothing# hide\r\nusing MakieRecipes.RecipesPipeline; using MakieRecipes.RecipesPipeline: PlotUtils; using MakieRecipes.Colors: @colorant_str; nothing # hide","category":"page"},{"location":"literate/examples/#","page":"-","title":"-","text":"using Makie, MakieRecipes","category":"page"},{"location":"literate/examples/#The-simplest-example-model-1","page":"-","title":"The simplest example model","text":"","category":"section"},{"location":"literate/examples/#","page":"-","title":"-","text":"using MakieRecipes.RecipesBase\r\n\r\nstruct T end\r\n\r\nRecipesBase.@recipe function plot(::T, n = 1; customcolor = :green)\r\n    markershape --> :auto        # if markershape is unset, make it :auto\r\n    markercolor :=  customcolor  # force markercolor to be customcolor\r\n    xrotation   --> 45           # if xrotation is unset, make it 45\r\n    zrotation   --> 90           # if zrotation is unset, make it 90\r\n    rand(10,n)                   # return the arguments (input data) for the next recipe\r\nend\r\n\r\nrecipeplot(T(); seriestype = :path)\r\n\r\nAbstractPlotting.save(\"basic.svg\", AbstractPlotting.current_scene()); nothing #hide","category":"page"},{"location":"literate/examples/#Testing-out-series-decomposition-1","page":"-","title":"Testing out series decomposition","text":"","category":"section"},{"location":"literate/examples/#","page":"-","title":"-","text":"sc = Scene()\r\nrecipeplot!(sc, rand(10, 2); seriestype = :scatter)\r\nrecipeplot!(sc, 1:10, rand(10, 1); seriestype = :path)\r\n\r\nAbstractPlotting.save(\"series.svg\", AbstractPlotting.current_scene()); nothing #hide","category":"page"},{"location":"literate/examples/#Differential-Equations-1","page":"-","title":"Differential Equations","text":"","category":"section"},{"location":"literate/examples/#","page":"-","title":"-","text":"using OrdinaryDiffEq, StochasticDiffEq, DiffEqNoiseProcess","category":"page"},{"location":"literate/examples/#A-simple-exponential-growth-model-1","page":"-","title":"A simple exponential growth model","text":"","category":"section"},{"location":"literate/examples/#","page":"-","title":"-","text":"f(u,p,t) = 1.01.*u\r\nu0 = [1/2, 1]\r\ntspan = (0.0,1.0)\r\nprob = ODEProblem(f,u0,tspan)\r\nsol = solve(prob, Tsit5(), reltol=1e-8, abstol=1e-8)\r\n\r\nrecipeplot(sol)\r\n\r\nAbstractPlotting.save(\"exp.svg\", AbstractPlotting.current_scene()); nothing #hide","category":"page"},{"location":"literate/examples/#Matrix-DiffEq-1","page":"-","title":"Matrix DiffEq","text":"","category":"section"},{"location":"literate/examples/#","page":"-","title":"-","text":"A  = [1. 0  0 -5\r\n      4 -2  4 -3\r\n     -4  0  0  1\r\n      5 -2  2  3]\r\nu0 = rand(4,2)\r\ntspan = (0.0,1.0)\r\nf(u,p,t) = A*u\r\nprob = ODEProblem(f,u0,tspan)\r\nsol = solve(prob, Tsit5(), reltol=1e-8, abstol=1e-8)\r\n\r\nrecipeplot(sol)\r\n\r\nAbstractPlotting.save(\"mat.svg\", AbstractPlotting.current_scene()); nothing #hide","category":"page"},{"location":"literate/examples/#Stochastic-DiffEq-1","page":"-","title":"Stochastic DiffEq","text":"","category":"section"},{"location":"literate/examples/#","page":"-","title":"-","text":"f(du,u,p,t) = (du .= u)\r\ng(du,u,p,t) = (du .= u)\r\nu0 = rand(4,2)\r\n\r\nW = WienerProcess(0.0,0.0,0.0)\r\nprob = SDEProblem(f,g,u0,(0.0,1.0),noise=W)\r\nsol = solve(prob,SRIW1())\r\n\r\nrecipeplot(sol)\r\n\r\nAbstractPlotting.save(\"stochastic.svg\", AbstractPlotting.current_scene()); nothing #hide","category":"page"},{"location":"literate/examples/#Animating-a-differential-equation-solution-1","page":"-","title":"Animating a differential equation solution","text":"","category":"section"},{"location":"literate/examples/#","page":"-","title":"-","text":"You can update arguments and attributes arbitrarily, and the recipe pipeline is rerun.","category":"page"},{"location":"literate/examples/#","page":"-","title":"-","text":"function lorenz(du, u, p, t)\r\n    du[1] = p[1]*(u[2]-u[1])\r\n    du[2] = u[1]*(p[2]-u[3]) - u[2]\r\n    du[3] = u[1]*u[2] - p[3]*u[3]\r\nend\r\n\r\nprob = ODEProblem(lorenz, [1., 5., 10.], (0., 100.), (10.0, 28.0, 8/3))\r\n\r\nρ = Node(28.0)\r\n\r\nsol = @lift solve(remake(prob; p = (10.0, $ρ, 8/3)), Tsit5())\r\n\r\nsc = recipeplot(sol)\r\n\r\nylims!(sc, -30, 70) # avoid jitter when animating\r\n\r\nrecord(sc, \"lorenz.gif\", LinRange(0, 35, 100)) do ρᵢ\r\n    ρ[] = ρᵢ\r\nend","category":"page"},{"location":"literate/examples/#Phylogenetic-tree-1","page":"-","title":"Phylogenetic tree","text":"","category":"section"},{"location":"literate/examples/#","page":"-","title":"-","text":"using Phylo\r\n\r\nassetpath = joinpath(dirname(pathof(MakieRecipes)), \"..\", \"docs\", \"src\", \"assets\")\r\nhummers = open(t -> parsenewick(t, NamedPolytomousTree), joinpath(assetpath, \"hummingbirds.tree\"))\r\n\r\nevolve(tree) = Phylo.map_depthfirst((val, node) -> val + randn(), 0., tree, Float64)\r\n\r\ntrait = evolve(hummers)\r\n\r\nscp = recipeplot(\r\n    hummers;\r\n    treetype = :fan,\r\n    line_z = trait,\r\n    linewidth = 5,\r\n    showtips = false,\r\n    cgrad = :RdYlBu,\r\n    seriestype = :path,\r\n    scale_plot = false, # Makie attributes can be used here as well!\r\n    show_axis = false\r\n)\r\n\r\nAbstractPlotting.save(\"phylo.svg\", AbstractPlotting.current_scene()); nothing #hide","category":"page"},{"location":"literate/examples/#Animation-with-different-colormaps-(changing-attributes)-1","page":"-","title":"Animation with different colormaps (changing attributes)","text":"","category":"section"},{"location":"literate/examples/#","page":"-","title":"-","text":"You can update arguments and attributes arbitrarily, and the recipe pipeline is rerun.","category":"page"},{"location":"literate/examples/#","page":"-","title":"-","text":"record(scp, \"phylo_colormaps.gif\", PlotUtils.cgradients(:colorcet), framerate = 3) do cmap\r\n    scp.plots[1].cgrad[] = cmap\r\nend","category":"page"},{"location":"literate/examples/#GraphRecipes-1","page":"-","title":"GraphRecipes","text":"","category":"section"},{"location":"literate/examples/#","page":"-","title":"-","text":"using GraphRecipes\r\nusing GraphRecipes: GraphPlot","category":"page"},{"location":"literate/examples/#","page":"-","title":"-","text":"In tis case, we don't need access to all of the functions which GraphRecipes provides - just the GraphPlot struct, which is used for recipe dispatch.  The rest is handled by the GraphRecipes internals.","category":"page"},{"location":"literate/examples/#The-simplest-graph-recipe-1","page":"-","title":"The simplest graph recipe","text":"","category":"section"},{"location":"literate/examples/#","page":"-","title":"-","text":"Because userplot is unsupported, we have to use the low-level interface to user plot recipes, by wrapping our arguments in the userplot type.  Arguments must be supplied as a Tuple or some other iterable.","category":"page"},{"location":"literate/examples/#","page":"-","title":"-","text":"recipeplot(\r\n    GraphPlot(\r\n        (\r\n        [0  1  1;\r\n         1  0  1;\r\n         1  1  0],\r\n         )\r\n    );\r\n    show_axis = false,\r\n    scale_plot = false\r\n)\r\n\r\nAbstractPlotting.save(\"simplegraph.svg\", AbstractPlotting.current_scene()); nothing #hide","category":"page"},{"location":"literate/examples/#Undirected-graph-with-node-labels-and-sizes-1","page":"-","title":"Undirected graph with node labels and sizes","text":"","category":"section"},{"location":"literate/examples/#","page":"-","title":"-","text":"n = 15\r\nA = Float64[ rand() < 0.5 ? 0 : rand() for i=1:n, j=1:n]\r\nfor i=1:n\r\n    A[i, 1:i-1] = A[1:i-1, i]\r\n    A[i, i] = 0\r\nend\r\n\r\nrecipeplot(\r\n        GraphPlot((A,));\r\n        markersize = 0.2,\r\n        node_weights = 1:n,\r\n        markercolor = range(colorant\"yellow\", stop=colorant\"red\", length=n),\r\n        names = 1:n,\r\n        fontsize = 10,\r\n        linecolor = :darkgrey,\r\n        show_axis = false,\r\n        scale_plot = false\r\n    )\r\n\r\nAbstractPlotting.save(\"undigraph.svg\", AbstractPlotting.current_scene()); nothing #hide","category":"page"},{"location":"literate/examples/#Multigraphs-1","page":"-","title":"Multigraphs","text":"","category":"section"},{"location":"literate/examples/#","page":"-","title":"-","text":"recipeplot(GraphPlot(([[1,1,2,2],[1,1,1],[1]],)); names=\"node_\".*string.(1:3), nodeshape=:circle, self_edge_size=0.25, show_axis = false, scale_plot = false)\r\n\r\nAbstractPlotting.save(\"digraph.svg\", AbstractPlotting.current_scene()); nothing #hide","category":"page"},{"location":"literate/examples/#Julia-AST-1","page":"-","title":"Julia AST","text":"","category":"section"},{"location":"literate/examples/#","page":"-","title":"-","text":"code = quote\r\n    function mysum(list)\r\n        out = 0\r\n        for value in list\r\n            out += value\r\n        end\r\n        out\r\n    end\r\nend\r\n\r\nrecipeplot(code; fontsize = 12, shorten = 0.01, axis_buffer = 0.15, nodeshape = :rect)\r\nAbstractPlotting.save(\"ast.svg\", AbstractPlotting.current_scene()); nothing #hide","category":"page"},{"location":"literate/examples/#Type-tree-with-GraphRecipes-1","page":"-","title":"Type tree with GraphRecipes","text":"","category":"section"},{"location":"literate/examples/#","page":"-","title":"-","text":"recipeplot(AbstractFloat; method = :tree, fontsize = 10)\r\nAbstractPlotting.save(\"typetree.svg\", AbstractPlotting.current_scene()); nothing #hide","category":"page"},{"location":"literate/examples/#","page":"-","title":"-","text":"","category":"page"},{"location":"literate/examples/#","page":"-","title":"-","text":"This page was generated using Literate.jl.","category":"page"},{"location":"#BioMakie.jl-1","page":"BioMakie.jl","title":"BioMakie.jl","text":"","category":"section"},{"location":"#","page":"BioMakie.jl","title":"BioMakie.jl","text":"","category":"page"},{"location":"#","page":"BioMakie.jl","title":"BioMakie.jl","text":"Modules = [BioMakie]","category":"page"}]
}
